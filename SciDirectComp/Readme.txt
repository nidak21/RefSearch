What are we trying to do:
a) learn about the SciDirect full text search API
b) prototype queries for each triage category to see how the results of
    those queries differ from the manually selected articles for each journal.
    In this respect, we are using the manually selected articles for a given
    year as the "gold standard" and trying to compare "apples to apples".

    Apples to apples Issues:
    Journal name mappings (MGI and SciDirect have different names for journals).
    Only compare MGI journals that are actively triaged - not those that are
	just occasionally used.
    Be wary of MGI-SciDirect differences (publication year, Pubmed/DOI id
	mappings).
c) Ultimately, we envision running these queries against all the SciDirect
    journals, even those we don't currently triage - but don't let that confuse
    us!

Files: 
------
SciDirect.py
    - module implementing class ElsevierSciDirect
    - Encapsulates passing queries and getting results from Elsevier API
SciDirect_v0.1.py
    - early version

getSciDirect.py*
    - handy tool for doing Elsevier queries from the command line
getSciDirect_v0.1.py*
    - early version of getSciDirect.py
getit.py*
    - REALLY early version of getSciDirect.py

SciDirectJournals.py*
    - implements class Journal which represents a Journal that is in MGI
       and Elsevier. Handles mapping between the MGI and Elsevier names.
    - reads in a list of all the Elsevier Journals in MGI
    - (so it knows all the various journal names)

JournalComp.py*
    - Experiment to go Journal by Journal for 2013 (or some year) for specific
      Triage categories, and compare Elsevier results to MGI selected results.
      See how we can match results to MGI and compute precision and recall
      (treating the MGI articles as the true positives).

      Lead to
	  - learning the Elsevier query API better
	  - the need to match journal names (the Journal class), 
	  - matching by DOI or pubmed IDs seems to work well enough
	  - (matching by journal, volume, pages doesn't buy much and is
	     unreliable)
	  - problems w/ MGI calling articles in 2013 when Elsevier says they
	    are in 2012 or 2014 instead - need to remove these from MGI list.
	  - etc. (apples to apples is harder than we'd think)
JournalComp_v0.1.py*
JournalComp_v0.2.py*
    - early versions of JournalComp.py

jakUtils.py
    - some basic utilities that should be moved to a more general library

ElsevierQueries/
    - some Elsevier queries I've played with
Data/Input/
    - input files to JournalComp.py, like the MGI references for 2013
Data/Journals/
    - files listing the MGI journals that are from Elsevier
Data/Output/
    - output files from JournalComp.py
Data/Html*
    - output files generated by JournalComp.py
Updates/
    - old progress reports from Jim on this work

What Next - To Do
---------
(DONE) change Content to "journal", see if that affects anything.

(ISSUES) try subject headings to improve precision (Harold sent subjects)
JIM: having trouble making this work w/ lots of subject words. Maybe need to do a Post?

(DONE) Change HTML summary: omit authors, display abstract if possible
(pubTYPE, working) Investigate any way to detect and omit Review papers

(DONE) Add SciDirect query result output files so we can analyze data easier

Add spreadsheet like output so we can analyze data easier (compare diff queries)

(DONE) Get Nancy's extended list of journals available at Sci Direct in a form
that they can be loaded by SciDirectJournals.py

use SQL to create table of journal/TC with numbers of selected papers by year

(DONE sort of) Need some version of JournalComp.py that will verify journal
mapping is correct and report MGI articles in a journal that are not returned
by that journal query.

Could expand that to verify articles in MGI match w/ SciDirect correctly,
e.g., Pubmed and DOI IDs match the same article, Journal title matches, maybe
more.

(DONE) Get the list of MGI refs not matched by Elsevier queries for 2013.
Get these excluded from the MGI set so they don't mess recall.

Run analysis for 2011 2012?

JournalComp.py
    1) Html generation is really ugly/brittle
    2) make config file location a cmd line option
    3) make num of false positives and false negatives to display configurable
	- really make config object injectable anywhere
    4) (DONE) compute after/before dates from year parameter
    5) use logging framework
    6) use javascript to make abstracts collapsable

SciDirect.py
    1) (DONE) Elsevier queries that return nothing don't come back with
	parsable JSON (or something).
       Need to handle this better and return an empty result set

    2) doQuery() methods should raise Exceptions on URL errors instead of
       returning messages
    3) still not happy with the structure. Needs some refactoring.
    4) (DONE - no delay) check delay parameter between queries, maybe we can
	speed up
